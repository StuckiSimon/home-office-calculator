{"version":3,"sources":["visual/ValidatedFormField.js","constants.js","state.js","validators.js","form/Enterprise.js","visual/SelectFormField.js","visual/TooltipLabel.js","form/Rent.js","form/Bureau.js","form/Mobility.js","Form.js","selector.js","stats/Fact.js","visual/PercentageDistribution.js","visual/StatMeter.js","stats/helper.js","stats/Economy.js","stats/Ecology.js","stats/Social.js","Stats.js","visual/MainContainer.js","visual/assets/logo.svg","visual/AppHeader.js","App.js","serviceWorker.js","index.js"],"names":["ValidationPlaceholder","styled","div","ValidationIcon","children","StatusInfo","color","Alert","StatusCritical","console","warn","Validation","type","message","Box","direction","align","Text","size","margin","horizontal","ValidatedFormField","value","onChange","label","min","validationObject","undefined","rest","FormField","TextInput","COMMUTE_EMISSIONS","employeeCountState","atom","key","default","homeOfficeDaysState","locationState","locationSqmPriceState","officeSpaceRentPrices","locationParkingPriceState","parkingPrices","employeeAreaState","officeEnergyStandardState","officeHeatingSourceState","commuteMixState","commuteTimeState","validate","val","probes","firstFailingValidation","find","probe","prober","ow","e","validateProbe","error","employeeCountValidator","selector","get","employees","number","positive","lessThan","homeOfficeDaysValidator","homeOfficeDays","Enterprise","useRecoilState","setEmployees","employeeCountValidation","useRecoilValue","setHomeOfficeDays","homeOfficeDaysValidation","pad","basis","placeholder","parseInt","target","max","SelectFormField","options","ThemeContext","Extend","formField","border","menuPortalTarget","document","body","TooltipLabel","tooltip","content","interactive","Rent","location","setLocation","citiesFormatted","Object","entries","cities","map","selectedCity","city","locationSqmPrice","setLocationSqmPrice","locationParkingPrice","setLocationParkingPrice","Bureau","employeeArea","setEmployeeArea","officeEnergyStandard","setOfficeEnergyStandard","energyStandardsFormatted","buildingEnergyStandards","selectedEnergyStandard","energyStandard","officeHeatingSource","setOfficeHeatingSource","heatingSourcesFormatted","heatingSources","selectedHeatingSource","heatingSource","Mobility","commuteTime","setCommuteTime","Form","top","bottom","Tabs","alignControls","flex","Tab","title","optimalWorkplaceCountState","Math","ceil","getCalculation","normalWorkplaceCount","optimalWorkplaceCount","normal","optimal","diff","workSpaceSelector","places","officeSpace","areaPerEmployee","officeRentSelector","officeHeatingPriceSelector","parkingPriceSelector","carPercentage","parkingPrice","round","officeHeatingEmissionsSelector","energyStandardPowerPerM2","heatingSourceCo2PerPowerUnit","commuteEmissionsSelector","avgEmissionsPerKm","prob","i","reduce","acc","emission","commuteTimeSelector","Fact","props","useSpring","from","Heading","span","interpolate","floor","toLocaleString","vertical","level","PercentageDistribution","values","Distribution","sort","a","background","fill","FactContainer","StatMeter","current","style","position","display","Meter","getCalcAsPercentage","getAsPercentage","hundred","asked","Economy","officeRent","heatingPrice","totalPricePercentage","optimalTotalPrice","diffTotalPrice","pricingDistribution","DataTable","columns","property","header","primary","render","data","footer","weight","name","Ecology","officeHeatingEmissions","commuteEmissions","totalOptimalEmissions","totalDiffEmissions","emissionDistribution","totalEmissionPercentage","Social","justify","Stats","workSpaces","Accordion","multiple","AccordionPanel","MainContainer","Main","width","_extends","assign","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","height","viewBox","ref","ForwardRef","forwardRef","AppHeader","Header","App","Grommet","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.51bb6083.chunk.js","sourcesContent":["import { Box, FormField, Text, TextInput } from 'grommet';\nimport styled from 'styled-components';\nimport React from 'react';\nimport { Alert, StatusCritical, StatusInfo } from 'grommet-icons';\n\nconst ValidationPlaceholder = styled.div`\n  min-height: 40px;\n`;\n\nconst ValidationIcon = ({ children }) => {\n  switch (children) {\n    case 'info':\n      return <StatusInfo color=\"brand\" />;\n    case 'warning':\n      return <Alert color=\"status-warning\" />;\n    case 'error':\n      return <StatusCritical color=\"status-critical\" />;\n    default:\n      console.warn('unknown validation type', children);\n      return null;\n  }\n};\n\nconst Validation = ({ type, message }) => {\n  return (\n    <ValidationPlaceholder>\n      <Box direction=\"row\" align=\"center\">\n        <ValidationIcon>{type}</ValidationIcon>\n        <Text size=\"small\" margin={{ horizontal: 'xsmall' }}>\n          {message}\n        </Text>\n      </Box>\n    </ValidationPlaceholder>\n  );\n};\n\nfunction ValidatedFormField({\n  value,\n  onChange,\n  label,\n  type = 'number',\n  min = 0,\n  validationObject = undefined,\n  ...rest\n}) {\n  return (\n    <>\n      <FormField label={label}>\n        <TextInput\n          min={min}\n          type={type}\n          value={value}\n          onChange={onChange}\n          {...rest}\n        />\n      </FormField>\n      {validationObject === undefined ? (\n        <ValidationPlaceholder />\n      ) : (\n        <Validation {...validationObject} />\n      )}\n    </>\n  );\n}\n\nexport default ValidatedFormField;\n","export const HEATING_COST_PER_M2 = 15 / 12;\n\nexport const COMMUTE_MIX_CAR_INDEX = 0;\nexport const COMMUTE_MIX_TRAIN_INDEX = 1;\nexport const COMMUTE_MIX_PUBLIC_TRANSPORT_INDEX = 2;\nexport const COMMUTE_MIX_BIKE_INDEX = 3;\nexport const COMMUTE_MIX_FOOT_INDEX = 4;\n\n// in g CO2 / km\nexport const COMMUTE_EMISSIONS = [197.23, 7.32, 54.56, 16, 0];\n\nexport const DAILY_COMMUTE_DISTANCE_KM = 30;\nexport const DAILY_COMMUTE_TIME_MINUTES = 62;\n\nexport const WORK_DAYS_PER_MONTH = 19;\n\nexport const WORK_DAYS = 5;\n","import { atom } from 'recoil';\nimport parkingPrices from './reference/parkingPrices.json';\nimport officeSpaceRentPrices from './reference/officeSpaceRentPrices.json';\nimport { DAILY_COMMUTE_TIME_MINUTES } from './constants';\n\nconst INITIAL_INDEX = '';\n\nexport const employeeCountState = atom({\n  key: 'employeeCountState',\n  default: 10,\n});\n\nexport const homeOfficeDaysState = atom({\n  key: 'homeOfficeDaysState',\n  default: 2,\n});\n\nexport const locationState = atom({\n  key: 'locationState',\n  default: '',\n});\n\nexport const locationSqmPriceState = atom({\n  key: 'locationSqmPriceState',\n  default: officeSpaceRentPrices[INITIAL_INDEX],\n});\n\nexport const locationParkingPriceState = atom({\n  key: 'locationParkingPriceState',\n  default: parkingPrices[INITIAL_INDEX],\n});\n\nexport const employeeAreaState = atom({\n  key: 'employeeAreaState',\n  default: 10,\n});\n\nexport const officeEnergyStandardState = atom({\n  key: 'officeEnergyStandardState',\n  default: 'san',\n});\n\nexport const officeHeatingSourceState = atom({\n  key: 'officeHeatingSourceState',\n  default: 'oil',\n});\n\n// Must be referenced by index constants\nexport const commuteMixState = atom({\n  key: 'commuteMixState',\n  default: [0.52, 0.17, 0.14, 0.07, 0.09],\n});\n\nexport const commuteTimeState = atom({\n  key: 'commuteTimeState',\n  default: DAILY_COMMUTE_TIME_MINUTES,\n});\n","import { selector } from 'recoil';\nimport ow from 'ow';\nimport { employeeCountState, homeOfficeDaysState } from './state';\n\nconst validateProbe = (val, prober) => {\n  try {\n    ow(val, prober);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst validate = (val, probes) => {\n  const firstFailingValidation = probes.find(\n    (probe) => !validateProbe(val, probe.prober)\n  );\n  return firstFailingValidation?.validationObject;\n};\n\nconst error = (message) => ({\n  type: 'error',\n  message,\n});\n\nconst warn = (message) => ({\n  type: 'warning',\n  message,\n});\n\nconst info = (message) => ({\n  type: 'info',\n  message,\n});\n\nconst probe = (prober, validationObject) => ({\n  prober,\n  validationObject,\n});\n\nexport const employeeCountValidator = selector({\n  key: 'employeeCountValidator',\n  get: ({ get }) => {\n    const employees = get(employeeCountState);\n\n    return validate(employees, [\n      probe(ow.number.positive, error('Zahl muss positiv sein')),\n      probe(\n        ow.number.lessThan(1001),\n        warn(\n          'Der Rechner ist optimal für Firmen unter 1000 Mitarbeitern geeignet'\n        )\n      ),\n    ]);\n  },\n});\n\nexport const homeOfficeDaysValidator = selector({\n  key: 'homeOfficeDaysValidator',\n  get: ({ get }) => {\n    const homeOfficeDays = get(homeOfficeDaysState);\n\n    return validate(homeOfficeDays, [\n      probe(ow.number.positive, error('Zahl muss positiv sein')),\n      probe(ow.number.lessThan(5), error('Die Zahl muss tiefer als 5 sein')),\n      probe(\n        ow.number.lessThan(3),\n        info(\n          'Wenn sie primär Remote arbeiten möchten, sollten Sie die Akzeptanz bei den Mitarbeitern abklären.'\n        )\n      ),\n    ]);\n  },\n});\n","import React from 'react';\nimport { Box } from 'grommet';\nimport ValidatedFormField from '../visual/ValidatedFormField';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { employeeCountState, homeOfficeDaysState } from '../state';\nimport { employeeCountValidator, homeOfficeDaysValidator } from '../validators';\n\nconst Enterprise = () => {\n  const [employees, setEmployees] = useRecoilState(employeeCountState);\n  const employeeCountValidation = useRecoilValue(employeeCountValidator);\n  const [homeOfficeDays, setHomeOfficeDays] = useRecoilState(\n    homeOfficeDaysState\n  );\n  const homeOfficeDaysValidation = useRecoilValue(homeOfficeDaysValidator);\n  return (\n    <Box direction=\"row\">\n      <Box pad=\"small\" basis=\"medium\">\n        <ValidatedFormField\n          placeholder=\"0\"\n          label=\"Anzahl Mitarbeiter\"\n          value={employees}\n          onChange={(e) => {\n            setEmployees(parseInt(e.target.value, 10) || 0);\n          }}\n          validationObject={employeeCountValidation}\n        />\n      </Box>\n      <Box pad=\"small\" basis=\"medium\">\n        <ValidatedFormField\n          placeholder=\"1-4\"\n          label=\"Tage Homeoffice / Woche\"\n          min={1}\n          max={4}\n          type=\"number\"\n          value={homeOfficeDays}\n          onChange={(e) => {\n            const homeOfficeDays = parseInt(e.target.value, 10) || 0;\n            setHomeOfficeDays(homeOfficeDays === 5 ? 4 : homeOfficeDays);\n          }}\n          validationObject={homeOfficeDaysValidation}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Enterprise;\n","import { FormField, ThemeContext } from 'grommet';\nimport React from 'react';\nimport Select from 'react-select';\n\nfunction SelectFormField({ label, value, onChange, options, ...rest }) {\n  return (\n    <ThemeContext.Extend\n      value={{ formField: { border: { color: 'transparent' } } }}\n    >\n      <FormField label={label}>\n        <Select\n          menuPortalTarget={document.body}\n          value={value}\n          onChange={onChange}\n          options={options}\n          {...rest}\n        />\n      </FormField>\n    </ThemeContext.Extend>\n  );\n}\n\nexport default SelectFormField;\n","import Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport { Box } from 'grommet';\nimport { StatusInfo } from 'grommet-icons';\nimport React from 'react';\n\nconst TooltipLabel = ({ tooltip, label }) => {\n  return (\n    <Box direction=\"row\" align=\"center\">\n      {label}\n      <Tippy content={tooltip} interactive>\n        <Box margin={{ horizontal: 'xsmall' }}>\n          <StatusInfo size=\"small\" color=\"brand\" />\n        </Box>\n      </Tippy>\n    </Box>\n  );\n};\n\nexport default TooltipLabel;\n","import React from 'react';\nimport { Box, FormField, TextInput } from 'grommet';\nimport SelectFormField from '../visual/SelectFormField';\nimport TooltipLabel from '../visual/TooltipLabel';\nimport { useRecoilState } from 'recoil';\nimport {\n  locationParkingPriceState,\n  locationSqmPriceState,\n  locationState,\n} from '../state';\nimport cities from '../reference/cities.json';\nimport parkingPrices from '../reference/parkingPrices.json';\nimport officeSpaceRentPrices from '../reference/officeSpaceRentPrices.json';\n\nconst Rent = () => {\n  const [location, setLocation] = useRecoilState(locationState);\n  const citiesFormatted = Object.entries(cities).map(([key, label]) => ({\n    value: key,\n    label,\n  }));\n  const selectedCity = citiesFormatted.find((city) => city.value === location);\n  const [locationSqmPrice, setLocationSqmPrice] = useRecoilState(\n    locationSqmPriceState\n  );\n  const [locationParkingPrice, setLocationParkingPrice] = useRecoilState(\n    locationParkingPriceState\n  );\n\n  const onLocationSelect = ({ value }) => {\n    setLocation(value);\n    setLocationParkingPrice(parkingPrices[value]);\n    setLocationSqmPrice(officeSpaceRentPrices[value]);\n  };\n  return (\n    <Box direction=\"row\">\n      <Box pad=\"small\" basis=\"medium\">\n        <SelectFormField\n          label={\n            <TooltipLabel\n              label=\"Ortschaft\"\n              tooltip=\"Ortschaft wird verwendet um Mietpreis Bürofläche und Parkplatz zu wählen.\"\n            />\n          }\n          value={selectedCity}\n          onChange={onLocationSelect}\n          options={citiesFormatted}\n        />\n      </Box>\n      <Box pad=\"small\" basis=\"medium\">\n        <FormField\n          label={\n            <TooltipLabel\n              label={\n                <>\n                  Mietpreis pro m<sup>2</sup>&nbsp;Bürofläche\n                </>\n              }\n              tooltip={\n                <>\n                  Quelle:\n                  https://de.statista.com/statistik/daten/studie/505317/umfrage/durchschnittsmieten-fuer-bueroflaechen-in-den-20-groessten-schweizer-agglomerationen/\n                  <br />\n                  \"Andere\" Daten: Durchschnitt\n                </>\n              }\n            />\n          }\n        >\n          <TextInput\n            min={0}\n            max={500}\n            type=\"number\"\n            value={locationSqmPrice}\n            onChange={(e) => {\n              setLocationSqmPrice(e.target.value);\n            }}\n          />\n        </FormField>\n      </Box>\n      <Box pad=\"small\">\n        <FormField\n          label={\n            <TooltipLabel\n              label=\"Mietpreis pro Parkplatz\"\n              tooltip={\n                <>\n                  Quelle:\n                  https://www.handelszeitung.ch/unternehmen/parkieren-das-kosten-einstellplatze-den-schweizer-stadten\n                  <br />\n                  \"Andere\" Daten: Durchschnitt\n                </>\n              }\n            />\n          }\n        >\n          <TextInput\n            min={0}\n            max={500}\n            type=\"number\"\n            value={locationParkingPrice}\n            onChange={(e) => {\n              setLocationParkingPrice(e.target.value);\n            }}\n          />\n        </FormField>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Rent;\n","import React from 'react';\nimport { Box, FormField, TextInput } from 'grommet';\nimport TooltipLabel from '../visual/TooltipLabel';\nimport SelectFormField from '../visual/SelectFormField';\nimport { useRecoilState } from 'recoil';\nimport {\n  employeeAreaState,\n  officeEnergyStandardState,\n  officeHeatingSourceState,\n} from '../state';\nimport buildingEnergyStandards from '../reference/buildingEnergyStandards.json';\nimport heatingSources from '../reference/heatingSources.json';\n\nconst Bureau = () => {\n  const [employeeArea, setEmployeeArea] = useRecoilState(employeeAreaState);\n  const [officeEnergyStandard, setOfficeEnergyStandard] = useRecoilState(\n    officeEnergyStandardState\n  );\n  const energyStandardsFormatted = Object.entries(\n    buildingEnergyStandards\n  ).map(([key, { label }]) => ({ value: key, label }));\n  const selectedEnergyStandard = energyStandardsFormatted.find(\n    (energyStandard) => energyStandard.value === officeEnergyStandard\n  );\n  const onEnergyStandardSelect = ({ value }) => {\n    setOfficeEnergyStandard(value);\n  };\n\n  const [officeHeatingSource, setOfficeHeatingSource] = useRecoilState(\n    officeHeatingSourceState\n  );\n  const heatingSourcesFormatted = Object.entries(\n    heatingSources\n  ).map(([key, { label }]) => ({ value: key, label }));\n  const selectedHeatingSource = heatingSourcesFormatted.find(\n    (heatingSource) => heatingSource.value === officeHeatingSource\n  );\n  const onHeatingSourceSelect = ({ value }) => {\n    setOfficeHeatingSource(value);\n  };\n  return (\n    <Box direction=\"row\">\n      <Box pad=\"small\" basis=\"medium\">\n        <FormField\n          label={\n            <TooltipLabel\n              label={\n                <>\n                  Arbeitsfläche pro Mitarbeiter (in m<sup>2</sup>)\n                </>\n              }\n              tooltip=\"Quelle Standardwert: https://www.seco.admin.ch/dam/seco/de/dokumente/Arbeit/Arbeitsbedingungen/Arbeitsgesetz%20und%20Verordnungen/Wegleitungen/Wegleitungen%203/ArGV3_art24.pdf.download.pdf/ArGV3_art24_de.pdf\"\n            />\n          }\n        >\n          <TextInput\n            placeholder=\"0\"\n            min={5}\n            max={40}\n            type=\"number\"\n            value={employeeArea}\n            onChange={(e) => {\n              setEmployeeArea(e.target.value);\n            }}\n          />\n        </FormField>\n      </Box>\n      <Box pad=\"small\" basis=\"medium\">\n        <SelectFormField\n          label={\n            <TooltipLabel\n              label=\"Heizung\"\n              tooltip={\n                <>\n                  Quellen Öl, Gas:\n                  https://www.klimaneutral-handeln.de/php/kompens-berechnen.php\n                  <br />\n                  Quelle Gas:\n                  https://heizung.de/heizung/tipps/umrechnung-m3-in-kwh-kubikmeter-in-kilowattstunden/\n                  <br />\n                  Quelle Wärmepumpe:\n                  https://www.bafu.admin.ch/bafu/de/home/themen/klima/klimawandel--fragen-und-antworten.html\n                </>\n              }\n            />\n          }\n          value={selectedHeatingSource}\n          onChange={onHeatingSourceSelect}\n          options={heatingSourcesFormatted}\n        />\n      </Box>\n      <Box pad=\"small\" basis=\"medium\">\n        <SelectFormField\n          label={\n            <TooltipLabel\n              label=\"Energiestandard\"\n              tooltip=\"Quelle: https://energie.ch/heizenergieverbrauch/\"\n            />\n          }\n          value={selectedEnergyStandard}\n          onChange={onEnergyStandardSelect}\n          options={energyStandardsFormatted}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Bureau;\n","import React from 'react';\nimport ValidatedFormField from '../visual/ValidatedFormField';\nimport TooltipLabel from '../visual/TooltipLabel';\nimport { Box } from 'grommet';\nimport { useRecoilState } from 'recoil';\nimport { commuteTimeState } from '../state';\n\nconst Mobility = () => {\n  const [commuteTime, setCommuteTime] = useRecoilState(commuteTimeState);\n  return (\n    <Box pad=\"small\">\n      <ValidatedFormField\n        placeholder=\"in min\"\n        label={\n          <TooltipLabel\n            label=\"Tägliche Pendelzeit in Minuten\"\n            tooltip=\"Quelle: https://www.bfs.admin.ch/bfs/de/home/statistiken/mobilitaet-verkehr/personenverkehr/pendlermobilitaet.html\"\n          />\n        }\n        max={160}\n        type=\"number\"\n        value={commuteTime}\n        onChange={(e) => {\n          setCommuteTime(parseInt(e.target.value, 10) || 0);\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Mobility;\n","import { Box, Tab, Tabs } from 'grommet';\nimport React from 'react';\nimport Enterprise from './form/Enterprise';\nimport Rent from './form/Rent';\nimport Bureau from './form/Bureau';\nimport Mobility from './form/Mobility';\n\nfunction Form() {\n  return (\n    <Box\n      direction=\"row\"\n      pad={{ top: 'medium', horizontal: 'medium', bottom: 'none' }}\n    >\n      <Tabs alignControls=\"start\" flex>\n        <Tab title=\"Unternehmen\">\n          <Enterprise />\n        </Tab>\n        <Tab title=\"Mietpreise\">\n          <Rent />\n        </Tab>\n        <Tab title=\"Büro\">\n          <Bureau />\n        </Tab>\n        <Tab title=\"Mobilität\">\n          <Mobility />\n        </Tab>\n      </Tabs>\n    </Box>\n  );\n}\n\nexport default Form;\n","import { selector } from 'recoil';\nimport {\n  commuteMixState,\n  commuteTimeState,\n  employeeAreaState,\n  employeeCountState,\n  homeOfficeDaysState,\n  locationParkingPriceState,\n  locationSqmPriceState,\n  officeEnergyStandardState,\n  officeHeatingSourceState,\n} from './state';\nimport {\n  COMMUTE_EMISSIONS,\n  COMMUTE_MIX_CAR_INDEX,\n  DAILY_COMMUTE_DISTANCE_KM,\n  WORK_DAYS_PER_MONTH,\n  HEATING_COST_PER_M2,\n  WORK_DAYS,\n} from './constants';\nimport buildingEnergyStandards from './reference/buildingEnergyStandards.json';\nimport heatingSources from './reference/heatingSources.json';\n\nconst optimalWorkplaceCountState = selector({\n  key: 'optimalWorkplaceCountState',\n  get: ({ get }) => {\n    const employees = get(employeeCountState);\n    const homeOfficeDays = get(homeOfficeDaysState);\n\n    return Math.ceil(((WORK_DAYS - homeOfficeDays) / WORK_DAYS) * employees);\n  },\n});\n\n/**\n * used for obtaining normal, optimal & diff values\n */\nconst getCalculation = (selector, { get }) => {\n  const normalWorkplaceCount = get(employeeCountState);\n  const optimalWorkplaceCount = get(optimalWorkplaceCountState);\n\n  const normal = selector(normalWorkplaceCount, { get });\n  const optimal = selector(optimalWorkplaceCount, { get });\n  const diff = normal - optimal;\n  return { normal, optimal, diff };\n};\n\nexport const workSpaceSelector = selector({\n  key: 'workSpaceSelector',\n  get: ({ get }) => {\n    return getCalculation((places) => places, { get });\n  },\n});\n\nconst officeSpace = (places, areaPerEmployee) => places * areaPerEmployee;\n\nexport const officeRentSelector = selector({\n  key: 'officeRentSelector',\n  get: ({ get }) => {\n    const areaPerEmployee = get(employeeAreaState);\n    const locationSqmPrice = get(locationSqmPriceState);\n    return getCalculation(\n      (places) => {\n        return officeSpace(places, areaPerEmployee) * locationSqmPrice;\n      },\n      { get }\n    );\n  },\n});\n\nexport const officeHeatingPriceSelector = selector({\n  key: 'officeHeatingPriceSelector',\n  get: ({ get }) => {\n    const areaPerEmployee = get(employeeAreaState);\n    return getCalculation(\n      (places) => {\n        return officeSpace(places, areaPerEmployee) * HEATING_COST_PER_M2;\n      },\n      { get }\n    );\n  },\n});\n\nexport const parkingPriceSelector = selector({\n  key: 'parkingPriceSelector',\n  get: ({ get }) => {\n    const carPercentage = get(commuteMixState)[COMMUTE_MIX_CAR_INDEX];\n    const parkingPrice = get(locationParkingPriceState);\n    return getCalculation(\n      (places) => {\n        return Math.round(carPercentage * places) * parkingPrice;\n      },\n      { get }\n    );\n  },\n});\n\n// in g CO2\nexport const officeHeatingEmissionsSelector = selector({\n  key: 'officeHeatingEmissionsSelector',\n  get: ({ get }) => {\n    const areaPerEmployee = get(employeeAreaState);\n    const energyStandard = get(officeEnergyStandardState);\n    const energyStandardPowerPerM2 =\n      buildingEnergyStandards[energyStandard].value;\n    const heatingSource = get(officeHeatingSourceState);\n    const heatingSourceCo2PerPowerUnit = heatingSources[heatingSource].value;\n    return getCalculation(\n      (places) => {\n        return Math.round(\n          officeSpace(places, areaPerEmployee) *\n            energyStandardPowerPerM2 *\n            heatingSourceCo2PerPowerUnit\n        );\n      },\n      { get }\n    );\n  },\n});\n\nexport const commuteEmissionsSelector = selector({\n  key: 'commuteEmissionsSelector',\n  get: ({ get }) => {\n    const commuteMix = get(commuteMixState);\n    const avgEmissionsPerKm = commuteMix\n      .map((prob, i) => COMMUTE_EMISSIONS[i] * prob)\n      .reduce((acc, emission) => acc + emission, 0);\n\n    return getCalculation(\n      (places) => {\n        return Math.round(\n          avgEmissionsPerKm *\n            places *\n            DAILY_COMMUTE_DISTANCE_KM *\n            WORK_DAYS_PER_MONTH\n        );\n      },\n      { get }\n    );\n  },\n});\n\n// in Minutes\nexport const commuteTimeSelector = selector({\n  key: 'commuteTimeSelector',\n  get: ({ get }) => {\n    const commuteTime = get(commuteTimeState);\n    return getCalculation(\n      (places) => {\n        return Math.round(places * commuteTime * WORK_DAYS_PER_MONTH);\n      },\n      { get }\n    );\n  },\n});\n","import { Box, Heading } from 'grommet';\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nconst Fact = ({ label, value }) => {\n  const props = useSpring({ number: parseInt(value, 10), from: { number: 0 } });\n\n  return (\n    <Box direction=\"row\" align=\"end\">\n      <Heading margin=\"none\">\n        <animated.span>\n          {props.number.interpolate((val) =>\n            Math.floor(val).toLocaleString('de-CH')\n          )}\n        </animated.span>\n      </Heading>\n      <Heading\n        margin={{\n          vertical: 'xsmall',\n          horizontal: 'small',\n        }}\n        color=\"dark-4\"\n        level={3}\n      >\n        {label}\n      </Heading>\n    </Box>\n  );\n};\n\nexport default Fact;\n","import { Box, Distribution, Text } from 'grommet';\nimport React from 'react';\n\nconst PercentageDistribution = ({ values }) => {\n  return (\n    <Distribution values={values.sort(({ value: a }, { value: b }) => b - a)}>\n      {(value) => (\n        <Box pad=\"small\" background={value.color} fill>\n          <Text size=\"large\">\n            {value.value}% {value.label}\n          </Text>\n        </Box>\n      )}\n    </Distribution>\n  );\n};\n\nexport default PercentageDistribution;\n","import { Heading, Meter } from 'grommet';\nimport styled from 'styled-components';\nimport React from 'react';\n\nconst FactContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate3d(-50%, -50%, 0);\n`;\n\nfunction StatMeter({ max, current, diff, size = 'small' }) {\n  return (\n    <div>\n      <div style={{ position: 'relative', display: 'inline-block' }}>\n        <Meter\n          type=\"circle\"\n          background=\"status-ok\"\n          round\n          max={max}\n          size={size}\n          values={[\n            {\n              color: 'accent-4',\n              value: current,\n            },\n          ]}\n        />\n        <FactContainer>\n          <Heading level={3}>{diff}</Heading>\n        </FactContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default StatMeter;\n","export const getCalcAsPercentage = (normal, optimal, diff) => {\n  return {\n    normal: 100,\n    optimal: getAsPercentage(normal, optimal),\n    diff: getAsPercentage(normal, diff),\n  };\n};\nexport const getAsPercentage = (hundred, asked) => {\n  return Math.round((100 / hundred) * asked);\n};\n","import React from 'react';\nimport { Box, DataTable, Heading, Text } from 'grommet';\nimport { useRecoilValue } from 'recoil';\nimport PercentageDistribution from '../visual/PercentageDistribution';\nimport StatMeter from '../visual/StatMeter';\nimport {\n  officeHeatingPriceSelector,\n  officeRentSelector,\n  parkingPriceSelector,\n} from '../selector';\nimport { getAsPercentage, getCalcAsPercentage } from './helper';\n\nconst Economy = () => {\n  const officeRent = useRecoilValue(officeRentSelector);\n  const heatingPrice = useRecoilValue(officeHeatingPriceSelector);\n  const parkingPrice = useRecoilValue(parkingPriceSelector);\n\n  const totalPricePercentage = getCalcAsPercentage(\n    officeRent.normal + heatingPrice.normal + parkingPrice.normal,\n    officeRent.optimal + heatingPrice.optimal + parkingPrice.optimal,\n    officeRent.diff + heatingPrice.diff + parkingPrice.diff\n  );\n  const optimalTotalPrice =\n    officeRent.optimal + heatingPrice.optimal + parkingPrice.optimal;\n  const diffTotalPrice =\n    officeRent.diff + heatingPrice.diff + parkingPrice.diff;\n\n  const pricingDistribution = [\n    {\n      value: getAsPercentage(optimalTotalPrice, officeRent.optimal),\n      color: 'accent-3',\n      label: 'Immobilien',\n    },\n    {\n      value: getAsPercentage(optimalTotalPrice, parkingPrice.optimal),\n      color: 'graph-0',\n      label: 'Parkplätze',\n    },\n    {\n      value: getAsPercentage(optimalTotalPrice, heatingPrice.optimal),\n      color: 'brand',\n      label: 'Wärmeenergie',\n    },\n  ];\n  return (\n    <>\n      <Box direction=\"row\">\n        <Box pad=\"small\" basis=\"full\">\n          <Heading level=\"6\" margin=\"none\">\n            Kostenverteilung\n          </Heading>\n          <PercentageDistribution values={pricingDistribution} />\n        </Box>\n        <Box pad=\"small\">\n          <Heading level=\"6\" margin=\"none\">\n            Kostenreduktion\n          </Heading>\n          <StatMeter\n            max={totalPricePercentage.normal}\n            current={totalPricePercentage.optimal}\n            diff={<>{totalPricePercentage.diff}%</>}\n          />\n        </Box>\n      </Box>\n      <DataTable\n        margin={{ vertical: 'medium' }}\n        columns={[\n          {\n            property: 'name',\n            header: <Text>Name</Text>,\n            primary: true,\n          },\n          {\n            align: 'end',\n            property: 'normal',\n            header: 'aktuelle Kosten',\n            render: (data) =>\n              data?.normal\n                ? data.normal.toLocaleString('de-CH') + ' CHF'\n                : null,\n          },\n          {\n            align: 'end',\n            property: 'optimal',\n            header: 'optimierte Kosten',\n            render: (data) =>\n              data?.optimal\n                ? data.optimal.toLocaleString('de-CH') + ' CHF'\n                : null,\n          },\n          {\n            align: 'end',\n            property: 'diff',\n            header: 'Sparpotenzial',\n            footer: '' + diffTotalPrice.toLocaleString('de-CH'),\n            render: (data) => (\n              <Text weight=\"bold\">{data.diff.toLocaleString('de-CH')} CHF</Text>\n            ),\n          },\n        ]}\n        data={[\n          {\n            name: 'Immobilien',\n            diff: officeRent.diff,\n            optimal: officeRent.optimal,\n            normal: officeRent.normal,\n          },\n          {\n            name: 'Wärmeenergie',\n            diff: heatingPrice.diff,\n            optimal: heatingPrice.optimal,\n            normal: heatingPrice.normal,\n          },\n          {\n            name: 'Parkplätze',\n            diff: parkingPrice.diff,\n            optimal: parkingPrice.optimal,\n            normal: parkingPrice.normal,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default Economy;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { Box, DataTable, Heading, Text } from 'grommet';\nimport PercentageDistribution from '../visual/PercentageDistribution';\nimport StatMeter from '../visual/StatMeter';\nimport {\n  commuteEmissionsSelector,\n  officeHeatingEmissionsSelector,\n} from '../selector';\nimport { getAsPercentage, getCalcAsPercentage } from './helper';\n\nconst Ecology = () => {\n  const officeHeatingEmissions = useRecoilValue(officeHeatingEmissionsSelector);\n  const commuteEmissions = useRecoilValue(commuteEmissionsSelector);\n  const totalOptimalEmissions =\n    officeHeatingEmissions.optimal + commuteEmissions.optimal;\n  const totalDiffEmissions =\n    officeHeatingEmissions.diff + commuteEmissions.diff;\n  const emissionDistribution = [\n    {\n      value: getAsPercentage(totalOptimalEmissions, commuteEmissions.optimal),\n      color: 'graph-0',\n      label: 'Mobilität',\n    },\n    {\n      value: getAsPercentage(\n        totalOptimalEmissions,\n        officeHeatingEmissions.optimal\n      ),\n      color: 'brand',\n      label: 'Wärmeenergie',\n    },\n  ];\n  const totalEmissionPercentage = getCalcAsPercentage(\n    officeHeatingEmissions.normal + commuteEmissions.normal,\n    officeHeatingEmissions.optimal + commuteEmissions.optimal,\n    officeHeatingEmissions.diff + commuteEmissions.diff\n  );\n  return (\n    <>\n      <Box direction=\"row\">\n        <Box pad=\"small\" basis=\"full\">\n          <Heading level=\"6\" margin=\"none\">\n            Anteil an Emissionen\n          </Heading>\n          <PercentageDistribution values={emissionDistribution} />\n        </Box>\n        <Box pad=\"small\">\n          <Heading level=\"6\" margin=\"none\">\n            Emissionsreduktion\n          </Heading>\n          <StatMeter\n            max={totalEmissionPercentage.normal}\n            current={totalEmissionPercentage.optimal}\n            diff={\n              <>\n                {Math.round(totalDiffEmissions / 1000).toLocaleString('de-CH')}{' '}\n                kg&nbsp;CO\n                <sub>2</sub>\n              </>\n            }\n          />\n        </Box>\n      </Box>\n      <DataTable\n        margin={{ vertical: 'medium' }}\n        columns={[\n          {\n            property: 'name',\n            header: <Text>Name</Text>,\n            primary: true,\n          },\n          {\n            align: 'end',\n            property: 'normal',\n            header: 'aktuelle Emissionen',\n            render: (data) =>\n              data?.normal ? (\n                <>\n                  {data.normal.toLocaleString('de-CH')} kg CO<sub>2</sub>\n                </>\n              ) : null,\n          },\n          {\n            align: 'end',\n            property: 'optimal',\n            header: 'optimierte Emissionen',\n            render: (data) =>\n              data?.optimal ? (\n                <>\n                  {data.optimal.toLocaleString('de-CH')} kg CO<sub>2</sub>\n                </>\n              ) : null,\n          },\n          {\n            align: 'end',\n            property: 'diff',\n            header: 'Sparpotenzial',\n            footer:\n              '' +\n              Math.round(totalDiffEmissions / 1000).toLocaleString('de-CH'),\n            render: (data) => (\n              <Text weight=\"bold\">\n                {data.diff.toLocaleString('de-CH')} kg CO<sub>2</sub>\n              </Text>\n            ),\n          },\n        ]}\n        data={[\n          {\n            name: 'Mobilität',\n            optimal: Math.round(commuteEmissions.optimal / 1000),\n            normal: Math.round(commuteEmissions.normal / 1000),\n            diff: Math.round(commuteEmissions.diff / 1000),\n          },\n          {\n            name: 'Wärmeenergie',\n            optimal: Math.round(officeHeatingEmissions.optimal / 1000),\n            normal: Math.round(officeHeatingEmissions.normal / 1000),\n            diff: Math.round(officeHeatingEmissions.diff / 1000),\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default Ecology;\n","import React from 'react';\nimport { Box, Heading } from 'grommet';\nimport { useRecoilValue } from 'recoil';\nimport StatMeter from '../visual/StatMeter';\nimport Fact from './Fact';\nimport { commuteTimeSelector } from '../selector';\n\nconst Social = () => {\n  const commuteTime = useRecoilValue(commuteTimeSelector);\n  return (\n    <Box direction=\"row\">\n      <Box pad=\"small\">\n        <Heading level=\"6\" margin=\"none\">\n          Zeitersparnis\n        </Heading>\n        <StatMeter\n          max={commuteTime.normal}\n          current={commuteTime.optimal}\n          diff={\n            <>{Math.round(commuteTime.diff / 60).toLocaleString('de-CH')} h</>\n          }\n        />\n      </Box>\n      <Box pad=\"small\" justify=\"end\">\n        <Fact label=\"Kuchen backen\" value={Math.round(commuteTime.diff / 60)} />\n        <Fact\n          label=\"Marathons laufen\"\n          value={Math.round(commuteTime.diff / 120)}\n        />\n        <Fact\n          label=\"TGV-Fahrten Zurich - Paris\"\n          value={Math.round(commuteTime.diff / (60 * 4))}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Social;\n","import { Accordion, AccordionPanel, Box, Heading, Text } from 'grommet';\nimport React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport {\n  commuteEmissionsSelector,\n  commuteTimeSelector,\n  officeHeatingEmissionsSelector,\n  workSpaceSelector,\n} from './selector';\nimport Fact from './stats/Fact';\nimport Economy from './stats/Economy';\nimport Ecology from './stats/Ecology';\nimport Social from './stats/Social';\n\nfunction Stats() {\n  const workSpaces = useRecoilValue(workSpaceSelector);\n\n  const officeHeatingEmissions = useRecoilValue(officeHeatingEmissionsSelector);\n  const commuteEmissions = useRecoilValue(commuteEmissionsSelector);\n  const totalDiffEmissions =\n    officeHeatingEmissions.diff + commuteEmissions.diff;\n\n  const commuteTime = useRecoilValue(commuteTimeSelector);\n\n  return (\n    <Box direction=\"column\" pad=\"medium\">\n      <Box direction=\"row\" align=\"end\">\n        <Heading size=\"small\">\n          Auswertung\n          <Text color=\"dark-4\" margin=\"small\">\n            Alle Zahlen pro Monat\n          </Text>\n        </Heading>\n      </Box>\n      <Box direction=\"row\">\n        <Box pad=\"xsmall\">\n          <Fact label=\"Arbeitsplätze weniger\" value={workSpaces.diff} />\n        </Box>\n        <Box pad=\"xsmall\">\n          <Fact\n            label={\n              <>\n                kg CO<sub>2</sub> weniger\n              </>\n            }\n            value={Math.round(totalDiffEmissions / 1000)}\n          />\n        </Box>\n        <Box pad=\"xsmall\">\n          <Fact\n            label=\"h mehr Freizeit\"\n            value={Math.round(commuteTime.diff / 60)}\n          />\n        </Box>\n      </Box>\n      <Accordion multiple basis=\"full\">\n        <AccordionPanel label=\"Ökonomie\">\n          <Economy />\n        </AccordionPanel>\n        <AccordionPanel label=\"Ökologie\">\n          <Ecology />\n        </AccordionPanel>\n        <AccordionPanel label=\"Sozial\">\n          <Social />\n        </AccordionPanel>\n      </Accordion>\n    </Box>\n  );\n}\n\nexport default Stats;\n","import { Main } from 'grommet';\nimport React from 'react';\n\nconst MainContainer = (props) => <Main width={{ max: '1200px' }} {...props} />;\n\nexport default MainContainer;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1.89396 274.817C21.2797 230.679 85.8532 152.479 189.061 192.787L381.409 108.486C360.296 153.381 292.269 233.095 189.061 192.787L1.89396 274.817Z\",\n  fill: \"#FD6FFF\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M45.1516 338.152C47.1516 289.985 78.8516 193.652 189.652 193.652L338.152 45.1516C334.818 94.6516 300.452 193.652 189.652 193.652L45.1516 338.152Z\",\n  fill: \"#6FFFB0\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M112.949 383.303C96.2264 338.088 88.3408 236.98 190.577 194.268L270.355 7.45058e-06C286.361 46.9592 292.814 151.556 190.577 194.268L112.949 383.303Z\",\n  fill: \"#81FCED\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 384,\n    height: 384,\n    viewBox: \"0 0 384 384\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.fc06ab78.svg\";\nexport { ForwardRef as ReactComponent };","import { Box, Header, Heading, Text } from 'grommet';\nimport React from 'react';\nimport { ReactComponent as LogoIcon } from './assets/logo.svg';\n\nconst AppHeader = () => (\n  <Box\n    pad={{\n      horizontal: 'medium',\n    }}\n  >\n    <Box\n      pad={{\n        horizontal: 'small',\n      }}\n    >\n      <Header>\n        <Box direction=\"row\" pad=\"small\" align=\"center\">\n          <LogoIcon style={{ height: 56, width: 56 }} />\n          <Heading\n            margin={{\n              horizontal: 'small',\n              vertical: 'none',\n            }}\n          >\n            Homeoffice Rechner\n          </Heading>\n        </Box>\n      </Header>\n      <Text>\n        Der Homeoffice Rechner ermöglicht Schweizer Dienstleistungsbetrieben den\n        Nutzen von Homeoffice abzuschätzen. Der Rechner ist für KMUs, welche\n        primär am Computer arbeiten, geeignet.\n      </Text>\n    </Box>\n  </Box>\n);\n\nexport default AppHeader;\n","import { Grommet } from 'grommet';\nimport React from 'react';\nimport { RecoilRoot } from 'recoil';\nimport Form from './Form';\nimport Stats from './Stats';\nimport MainContainer from './visual/MainContainer';\nimport AppHeader from './visual/AppHeader';\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <Grommet>\n        <MainContainer>\n          <AppHeader />\n          <Form />\n          <Stats />\n        </MainContainer>\n      </Grommet>\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}